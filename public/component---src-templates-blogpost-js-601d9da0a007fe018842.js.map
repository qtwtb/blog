{"version":3,"sources":["webpack:///./src/templates/blogpost.js"],"names":["data","console","log","allContentfulBlogPost","edges","node","categories","content","title","introduction","html","childContentfulBlogPostMarkdownTextNode","childMarkdownRemark","tags","headMedia","file","url","imgSource","description","className","createdAt","src","dangerouslySetInnerHTML","__html","map","tag","href","slug","query"],"mappings":"2FAAA,8FAKe,sBAAe,IAAZA,EAAW,EAAXA,KAChBC,QAAQC,IAAIF,EAAKG,sBAAsBC,MAAM,GAAGC,KAAKC,YACrD,IAAIC,EAAUP,EAAKG,sBAAsBC,MAAM,GAC3CI,EAAUD,EAAQF,KAAKG,MACvBC,EAAeF,EAAQF,KAAKI,aAC5BC,EAAOH,EAAQF,KAAKM,wCAAwCC,oBAAoBF,KAChFG,EAAOb,EAAKG,sBAAsBC,MAAM,GAAGC,KAAKC,WAEvB,MAA1BC,EAAQF,KAAKS,YACdP,EAAQF,KAAKS,UAAY,CACvBC,KAAM,CACJC,IAAK,gHAKX,IAAIC,EAAYV,EAAQF,KAAKS,UAAUC,KAAKC,IAE5C,OACE,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAKR,MAAOA,EAAOU,YAAaT,IAC9B,yBAAKU,UAAU,mBACb,4BAAKX,GACL,2BAAIC,GACJ,uBAAGU,UAAU,cAAb,eAAuCZ,EAAQF,KAAKe,WACpD,6BACA,yBAAKC,IAAKJ,KAEZ,yBAAKE,UAAU,YAAYG,wBAAyB,CAACC,OAAQb,KAC7D,yBAAKS,UAAU,gBACb,6CACA,6BAEIN,EAAKW,KAAI,SAAAC,GAAG,OACV,uBAAGN,UAAU,oBAAmB,uBAAGO,KAAI,aAAeD,EAAIE,MAASF,EAAIA,WAK/E,2BAAOH,wBAAyB,CAACC,OAAO,wKAWvC,IAAMK,EAAK","file":"component---src-templates-blogpost-js-601d9da0a007fe018842.js","sourcesContent":["import React from \"react\"\nimport Layout from \"../components/layout\"\nimport { graphql } from \"gatsby\"\nimport SEO from \"../components/seo\"\n\nexport default ({ data }) => {\n  console.log(data.allContentfulBlogPost.edges[0].node.categories)\n  let content = data.allContentfulBlogPost.edges[0]\n  let title   = content.node.title\n  let introduction = content.node.introduction\n  let html = content.node.childContentfulBlogPostMarkdownTextNode.childMarkdownRemark.html\n  let tags = data.allContentfulBlogPost.edges[0].node.categories\n\n  if(content.node.headMedia == null){\n    content.node.headMedia = {\n      file: {\n        url: 'https://cdn3.iconfinder.com/data/icons/multimedia-ver-3-glyph/32/picture_images_photo_image_camera-128.png'\n      }\n    }\n  }\n\n  let imgSource = content.node.headMedia.file.url\n\n  return (\n    <Layout>\n    <SEO title={title} description={introduction}></SEO>\n      <div className='title-and-intro'>\n        <h1>{title}</h1>\n        <p>{introduction}</p>\n        <p className='created-at'>Created At: {content.node.createdAt}</p>\n        <hr />\n        <img src={imgSource} />\n      </div>\n      <div className='post-body' dangerouslySetInnerHTML={{__html: html}}></div>\n      <div className='toggled-tags'>\n        <h2>Toggled Tags:</h2>\n        <div>\n          {\n            tags.map(tag => (\n              <p className='tags-blogpost-js'><a href={`/category/${tag.slug}`}>{tag.tag}</a></p>\n            ))\n          }\n        </div>\n      </div>\n      <style dangerouslySetInnerHTML={{__html: `\n        h1 {\n              margin-top: 5vh !important;\n              margin-bottom: 3vh !important;\n              text-align: start;\n            }\n      `}} />\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($slugPath: String!) {\n    allContentfulBlogPost(filter: {slug: {eq: $slugPath}}) {\n      edges {\n        node {\n          childContentfulBlogPostMarkdownTextNode {\n            childMarkdownRemark {\n              html\n            }\n          }\n          title\n          slug\n          createdAt(formatString: \"YYYY/MM/DD\")\n          introduction\n          categories {\n            tag\n            slug\n          }\n          headMedia {\n            file {\n              url\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\n// query MyQuery {\n//   allContentfulBlogPost {\n//     edges {\n//       node {\n//         categories {\n//           title\n//         }\n//       }\n//     }\n//   }\n// }\n"],"sourceRoot":""}